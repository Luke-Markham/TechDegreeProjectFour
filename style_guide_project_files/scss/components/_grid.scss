// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************

// Main container ---

.container {
  @include body-center {
    @include mq(large) {
      width: 80%;
    }
  }
}

// card ---

.card {
  margin-top: 2.5em;
}
// grid base class -------------------

.grid__col--6 {
  @include mq(medium) {
    & .img--avatar {
      transform: translateY(-10%);
      padding-left: 7em;
    }
  }
  @include mq(large) {
    padding-left: 3em;
    padding-top: 1.5em;
    & .img--avatar {
      margin-left: 1em;
      transform: none;
      padding-left: 3em;
    }
  }
}
// NOTE: arranges button class when at 1400px breakpoint

.grid__col--12 {
  @include mq(large) {
    @include flex();
    &:nth-last-of-type(3) {
      margin-top: 2em;
    }
  }
}

// grid style ---

.grid__col--3.theme__colors {
  @include grid-btn;
  background-color: $col-3-color;
}
.grid__col--4.theme__colors {
  @include grid-btn;
  background-color: $col-4-color;
}
.grid__col--5.theme__colors {
  @include grid-btn;
  background-color: $col-5-color;
}
.grid__col--6.theme__colors {
  @include grid-btn;
  background-color: $col-6-color;
}
.grid__col--7.theme__colors {
  @include grid-btn;
  background-color: $col-7-color;
}
.grid__col--7.theme__colors.centered {
  @include grid-btn;
  margin-bottom: 1.5em;
  @include mq(medium) {
    transform: translateX(35%);
    margin-bottom: 5em;
  }

  @include mq(large) {
    transform: translateX(35%);
    margin-bottom: 4em;
  }
}
.grid__col--8.theme__colors {
  @include grid-btn;
  background-color: $col-8-color;
}
.grid__col--12.theme__colors {
  @include grid-btn;
  background-color: $col-12-color;
  @include mq(large) {
    @include flex($just: center);
  }
}

// grid layout ---

.grid {
  // .grid__row
  &__row {
    padding: 1em 10px;
    display: flex;
    flex-direction: column;

    // NOTE: replace with media query mixin if aiming for exceeds
    @include mq(medium) {
      flex-direction: row;
    }
  }

  // .grid__col
  &__col {
    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {
      // concatenate CSS selector, ie when $i = 1,
      // selector would be .grid__col--1
      &--#{$i} {
        // base styles applied to all grid columns
        // NOTE: could be converted to a placeholder, along with margin
        // from the  media query
        margin-top: 10px;
        flex-basis: 100%;

        // NOTE: replace with media query mixin if aiming for exceeds
        @include mq(medium) {
          // base stlyes applied to all grid columns
          margin-top: 0;

          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"};
        }
      }
    }
  }
}

// targets all elements with classes that begin with grid__col
[class^="grid__col"] {
  // grid__col + grid__col, targets two sibling columns
  & + & {
    // NOTE: replace with media query mixin if aiming for exceeds
    @include mq(medium) {
      // add grid gutter
      margin-left: 10px;
    }
  }
}
